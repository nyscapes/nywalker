  <div id="map" style="height: {{map_height}}">
      </div>
      <script src='https://npmcdn.com/@turf/turf/turf.min.js'></script>
      <script>
        let map = L.map('map').setView([0,0], 1);
        const baseLayer = L.tileLayer.provider('Stamen.TonerLite').addTo(map);
        // This array changes the circleMarker's color scheme to match the confidence in the place. Darker & fainter for less confident.
        const confidence_array = [{}, 
          {'radius': 3, 'stroke': false, 'fillOpacity': 0.25, 'fillColor': '#009900'}, 
          {'radius': 3, 'stroke': false, 'fillOpacity': 0.4, 'fillColor': '#00aa00'},
          {'radius': 3, 'stroke': false, 'fillOpacity': 0.7, 'fillColor': '#00ee00'}
        ];
        let dots = L.featureGroup();
        let geojson = {"type": "FeatureCollection", "features": []};
        $.getJSON("/json/{{{json_file}}}.json", function(places){
          places.forEach(function(place){
            let popup = "<h4><a href='/places/" + place.slug + "'>" + place.name + "</a></h4>" +
              "<small><strong>Referred to as:</strong><br/>" + place.place_names + "<br/><strong>Total mentions:</strong> " + 
              place.count + "<br/><strong>Confidence (0â€“3):</strong> " + 
              place.confidence + "</small>";
            dots.addLayer(L.circleMarker([place.lat, place.lon],
              confidence_array[place.confidence]).bindPopup(popup).bindTooltip(place.place_names_sentence));
            let point = turf.point([place.lon, place.lat]);
            point.properties = {"count": place.count};
            geojson.features.push(point);
          });
          L.geoJson(turf.standardDeviationalEllipse(geojson, {weight: "count", steps: 256}), {style: {color: "#0000ee", fillOpacity: 0}}).addTo(map);
          L.geoJson(turf.centerMean(geojson, {weight: "count"}), {pointToLayer: function(g, l){ return L.circleMarker(l, {color: "#0000ee", fillColor: "#0000ee", radius: 5}); }}).bindTooltip("Weighted Mean Center").addTo(map);
          L.geoJson(turf.centerMedian(geojson, {weight: "count"}), {pointToLayer: function(g, l){ return L.circleMarker(l, {color: "#ee0000", fillColor: "#ee0000", radius: 5}); }}).bindTooltip("Weighted Median Center").addTo(map);
          dots.addTo(map);
          map.fitBounds(dots.getBounds());
        });
      </script>
